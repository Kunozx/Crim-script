do local Rayfield=loadstring(game:HttpGet("https://sirius.menu/rayfield"))();local Window=Rayfield:CreateWindow({Name="KuniHub",LoadingTitle="The Best",LoadingSubtitle="By Kuno",ConfigurationSaving={Enabled=true,FolderName=KuniHub,FileName="AimbotConfig"},KeySystem=false});local AimbotTab=Window:CreateTab("Aimbot Legit",4483362458);local Section=AimbotTab:CreateSection("Aim Settings");local fov=200;local smoothnessX=9;local smoothnessY=4;local predictionTime=0.075;local aimbotEnabled=false;AimbotTab:CreateToggle({Name="Enable Aimbot",CurrentValue=false,Callback=function(val) aimbotEnabled=val;end});AimbotTab:CreateSlider({Name="Field of View",Range={50,500},Increment=5,CurrentValue=fov,Callback=function(val) fov=val;end});AimbotTab:CreateSlider({Name="Smoothness X",Range={1,20},Increment=1,CurrentValue=smoothnessX,Callback=function(val) smoothnessX=val;end});AimbotTab:CreateSlider({Name="Smoothness Y",Range={1,20},Increment=1,CurrentValue=smoothnessY,Callback=function(val) smoothnessY=val;end});AimbotTab:CreateSlider({Name="Prediction Time",Range={0,0.3},Increment=0.005,CurrentValue=predictionTime,Callback=function(val) predictionTime=val;end});local Players=game:GetService("Players");local RunService=game:GetService("RunService");local UserInputService=game:GetService("UserInputService");local localPlayer=Players.LocalPlayer;local camera=workspace.CurrentCamera;local mouse=localPlayer:GetMouse();local aimHeld=false;local currentTargetPart=nil;local targetPriority={"Head"};local function isInFirstPerson() return (camera.Focus.Position-camera.CFrame.Position).Magnitude<1 ;end local function getPredictedPosition(part) if ( not part or  not part:IsA("BasePart")) then return nil;end return part.Position + (part.Velocity * predictionTime) ;end local function isVisible(origin,targetPart) local direction=(targetPart.Position-origin).Unit * 1000 ;local params=RaycastParams.new();params.FilterDescendantsInstances={camera,localPlayer.Character};params.FilterType=Enum.RaycastFilterType.Blacklist;params.IgnoreWater=true;local result=workspace:Raycast(origin,direction,params);return result and result.Instance:IsDescendantOf(targetPart.Parent) ;end local function isValidTarget(part) if ( not part or  not part:IsA("BasePart")) then return false;end local player=Players:GetPlayerFromCharacter(part.Parent);if ( not player or (player==localPlayer)) then return false;end local humanoid=part.Parent:FindFirstChildOfClass("Humanoid");if ( not humanoid or (humanoid.Health<=0)) then return false;end local predicted=getPredictedPosition(part);if  not predicted then return false;end if ((camera.CFrame.Position-predicted).Magnitude>400) then return false;end local screenPos,onScreen=camera:WorldToScreenPoint(predicted);return onScreen and isVisible(camera.CFrame.Position,part) ;end local function getClosestTargetPart() local bestPart,bestDist=nil,fov;for _,player in ipairs(Players:GetPlayers()) do if ((player~=localPlayer) and player.Character) then local humanoid=player.Character:FindFirstChildOfClass("Humanoid");if (humanoid and (humanoid.Health>0)) then for _,partName in ipairs(targetPriority) do local part=player.Character:FindFirstChild(partName);if (part and isValidTarget(part)) then local predicted=getPredictedPosition(part);local screenPos=camera:WorldToScreenPoint(predicted);local dist=(Vector2.new(mouse.X,mouse.Y) -Vector2.new(screenPos.X,screenPos.Y)).Magnitude;if (dist<bestDist) then bestDist=dist;bestPart=part;end end end end end end return bestPart;end local function normalizeAngle(angle) return math.atan2(math.sin(angle),math.cos(angle));end RunService.RenderStepped:Connect(function(dt) if ( not aimbotEnabled or  not aimHeld or  not isInFirstPerson()) then return;end if  not isValidTarget(currentTargetPart) then currentTargetPart=getClosestTargetPart();end if  not currentTargetPart then return;end local predicted=getPredictedPosition(currentTargetPart);if  not predicted then return;end local dir=(predicted-camera.CFrame.Position).Unit;local dist=(predicted-camera.CFrame.Position).Magnitude;local curSmoothX,curSmoothY=smoothnessX,smoothnessY;if (dist>90) then local t=math.clamp((dist-90)/(600 -90) ,0,1);local mul=1 + ((2 -1) * t) ;curSmoothX=smoothnessX/mul ;curSmoothY=smoothnessY/mul ;end local curYaw=math.atan2(camera.CFrame.LookVector.X,camera.CFrame.LookVector.Z);local curPitch=math.asin(camera.CFrame.LookVector.Y);local tgtYaw=math.atan2(dir.X,dir.Z);local tgtPitch=math.asin(dir.Y);local yawDiff=normalizeAngle(tgtYaw-curYaw );local pitchDiff=normalizeAngle(tgtPitch-curPitch );local newYaw=curYaw + (yawDiff * dt * curSmoothX) ;local newPitch=curPitch + (pitchDiff * dt * curSmoothY) ;local newVec=Vector3.new(math.sin(newYaw) * math.cos(newPitch) ,math.sin(newPitch),math.cos(newYaw) * math.cos(newPitch) );camera.CFrame=CFrame.new(camera.CFrame.Position,camera.CFrame.Position + newVec );end);UserInputService.InputBegan:Connect(function(input) if (input.UserInputType==Enum.UserInputType.MouseButton2) then aimHeld=true;currentTargetPart=nil;end end);UserInputService.InputEnded:Connect(function(input) if (input.UserInputType==Enum.UserInputType.MouseButton2) then aimHeld=false;currentTargetPart=nil;end end);local ESPTab=Window:CreateTab("ESP Features",4483362458);local ESPSection=ESPTab:CreateSection("Visuals");local espEnabled=false;local espMaxDistance=400;ESPTab:CreateToggle({Name="Enable ESP",CurrentValue=false,Callback=function(val) espEnabled=val;if val then enableESP();end end});ESPTab:CreateSlider({Name="ESP Max Distance",Range={100,1000},Increment=50,CurrentValue=espMaxDistance,Callback=function(val) espMaxDistance=val;end});function enableESP() local player=game:GetService("Players").LocalPlayer;local camera=workspace.CurrentCamera;local playerMovementTracker={};local function NewLine(thickness,color) local line=Drawing.new("Line");line.Visible=false;line.Color=color;line.Thickness=thickness;line.Transparency=1;return line;end local function Visibility(state,lib) for _,obj in pairs(lib) do obj.Visible=state;end end local function trackAFK(plr,library) playerMovementTracker[plr]={lastPosition=nil,idleTime=0,isAFK=false};coroutine.wrap(function() while plr and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")  do local hrp=plr.Character:FindFirstChild("HumanoidRootPart");local currentPos=hrp.Position;local data=playerMovementTracker[plr];if (data.lastPosition and ((currentPos-data.lastPosition).Magnitude<0.1)) then data.idleTime=data.idleTime + 1 ;else data.idleTime=0;if data.isAFK then data.isAFK=false;Visibility(true,{library.healthbar,library.greenhealth});library.label.Visible=true;end end if ((data.idleTime>=60) and  not data.isAFK) then data.isAFK=true;Visibility(false,{library.healthbar,library.greenhealth});library.label.Visible=false;end data.lastPosition=currentPos;task.wait(1);end end)();end local function ESP(plr) local library={healthbar=NewLine(3,Color3.new(0,0,0)),greenhealth=NewLine(1.5,Color3.fromRGB(0,255,0)),label=Drawing.new("Text")};library.label.Visible=false;library.label.Center=true;library.label.Outline=true;library.label.Size=14;library.label.Color=Color3.new(1,1,1);library.label.Text="100";trackAFK(plr,library);coroutine.wrap(function() while plr and (plr.Parent==game.Players)  do if (plr.Character and plr.Character:FindFirstChild("Humanoid") and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Head")) then if  not espEnabled then Visibility(false,{library.healthbar,library.greenhealth});library.label.Visible=false;task.wait();continue;end local root=plr.Character.HumanoidRootPart;local head=plr.Character.Head;local humanoid=plr.Character:FindFirstChild("Humanoid");local distance=(camera.CFrame.Position-root.Position).Magnitude;local HumPos,onScreen=camera:WorldToViewportPoint(root.Position);if (humanoid and (humanoid.Health>0) and onScreen and (distance<=espMaxDistance)) then local headPos=camera:WorldToViewportPoint(head.Position);local distY=math.clamp((Vector2.new(headPos.X,headPos.Y) -Vector2.new(HumPos.X,HumPos.Y)).Magnitude,2,math.huge);local barLength=(Vector2.new(HumPos.X-distY ,HumPos.Y-(distY * 2) ) -Vector2.new(HumPos.X-distY ,HumPos.Y + (distY * 2) )).Magnitude;local healthOffset=(humanoid.Health/humanoid.MaxHealth) * barLength ;local healthVal=math.floor(humanoid.Health);local barX=(HumPos.X-distY) -4 ;library.healthbar.From=Vector2.new(barX,HumPos.Y + (distY * 2) );library.healthbar.To=Vector2.new(barX,HumPos.Y-(distY * 2) );library.greenhealth.From=Vector2.new(barX,HumPos.Y + (distY * 2) );library.greenhealth.To=Vector2.new(barX,(HumPos.Y + (distY * 2)) -healthOffset );library.greenhealth.Color=Color3.fromRGB(255,0,0):Lerp(Color3.fromRGB(0,255,0),humanoid.Health/humanoid.MaxHealth );library.label.Text=tostring(healthVal);library.label.Position=library.greenhealth.To-Vector2.new(20,0) ;library.label.Visible=true;library.healthbar.Visible=true;library.greenhealth.Visible=true;else Visibility(false,{library.healthbar,library.greenhealth});library.label.Visible=false;end else Visibility(false,{library.healthbar,library.greenhealth});library.label.Visible=false;end task.wait();end Visibility(false,{library.healthbar,library.greenhealth});library.label.Visible=false;end)();end for _,v in pairs(game.Players:GetPlayers()) do if (v~=player) then ESP(v);end end game.Players.PlayerAdded:Connect(function(newplr) if (newplr~=player) then newplr.CharacterAdded:Connect(function() task.wait(1);ESP(newplr);end);end end);end local safeESPEnabled=false;local safeESPDistance=100;local RunService=game:GetService("RunService");local safeParent=workspace:WaitForChild("Map"):WaitForChild("BredMakurz");local function isSafe(model) if  not model:IsA("Model") then return false;end local name=model.Name;return name:match("^SmallSafe_") or name:match("^MediumSafe_") ;end local function getDistanceFromPlayerToSafe(safe) local rootPart=game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ;if  not rootPart then return math.huge;end local safePrimaryPart=(safe:IsA("Model") and safe.PrimaryPart) or safe:FindFirstChildWhichIsA("BasePart") ;if  not safePrimaryPart then return math.huge;end return (rootPart.Position-safePrimaryPart.Position).Magnitude;end local function updateSafeHighlight(safe) if  not isSafe(safe) then return;end local broken=safe:FindFirstChild("Values") and safe.Values:FindFirstChild("Broken") ;if  not broken then return;end local isOpened=broken.Value~=false ;local existing=safe:FindFirstChild("SafeCham");local distance=getDistanceFromPlayerToSafe(safe);if (safeESPEnabled and  not isOpened and (distance<=safeESPDistance)) then if  not existing then local highlight=Instance.new("Highlight");highlight.Name="SafeCham";highlight.FillColor=Color3.fromRGB(0,255,0);highlight.OutlineColor=Color3.fromRGB(255,255,255);highlight.FillTransparency=0.3;highlight.OutlineTransparency=0;highlight.Adornee=safe;highlight.Parent=safe;end elseif existing then existing:Destroy();end end ESPTab:CreateToggle({Name="Enable Safe ESP",CurrentValue=false,Callback=function(val) safeESPEnabled=val;end});ESPTab:CreateSlider({Name="Safe ESP Distance",Range={50,500},Increment=25,CurrentValue=safeESPDistance,Callback=function(val) safeESPDistance=val;end});RunService.Heartbeat:Connect(function() for _,item in ipairs(safeParent:GetChildren()) do updateSafeHighlight(item);end end);local MiscTab=Window:CreateTab("Miscellaneous",4483362458);local MiscSection=MiscTab:CreateSection("Environment Tweaks");local fullBrightEnabled=false;local storedLightingObjects={};MiscTab:CreateToggle({Name="Full Brightness",CurrentValue=false,Callback=function(val) fullBrightEnabled=val;local Lighting=game:GetService("Lighting");if val then storedLightingObjects={};for _,obj in pairs(Lighting:GetChildren()) do table.insert(storedLightingObjects,obj:Clone());obj:Destroy();end print("🌞 Full Brightness Enabled: Lighting objects destroyed");else for _,obj in pairs(storedLightingObjects) do obj.Parent=Lighting;end print("🌙 Full Brightness Disabled: Lighting objects restored");end end});local lockpickEnhancerRunning=false;local lockpickEnhancerConnection=nil;MiscTab:CreateToggle({Name="LockPick (Bigger Pin Bars)",CurrentValue=false,Callback=function(val) lockpickEnhancerRunning=val;if val then print("🔐 Lockpick Enhancer Enabled");lockpickEnhancerConnection=task.spawn(function() while lockpickEnhancerRunning do local pgui=game.Players.LocalPlayer:WaitForChild("PlayerGui");local lpgui=pgui:FindFirstChild("LockpickGUI");if lpgui then local function tryResize(barName) local success,selection=pcall(function() return lpgui.MF.LP_Frame.Frames[barName].Bar.Selection;end);if (success and selection and selection.Parent:FindFirstChild("UIScale")) then selection.Parent.UIScale.Scale=10;end end tryResize("B1");tryResize("B2");tryResize("B3");end task.wait(0.5);end end);else print("🔓 Lockpick Enhancer Disabled");if lockpickEnhancerConnection then task.cancel(lockpickEnhancerConnection);lockpickEnhancerConnection=nil;end end end});local infStaminaEnabled=false;local staminaHook;MiscTab:CreateToggle({Name="Infinite Stamina",CurrentValue=false,Callback=function(val) infStaminaEnabled=val;if val then print("⚡ Infinite Stamina Enabled");local success,result=pcall(function() local g=getgenv();local oldStamina=nil;staminaHook=hookfunction(getupvalue(getrenv()._G.S_Take,2),function(v1,...) if infStaminaEnabled then v1=0;end return oldStamina(v1,...);end);end);if  not success then warn("❌ Failed to hook stamina function: "   .. tostring(result) );end else print("⚡ Infinite Stamina Disabled");end end}); end
